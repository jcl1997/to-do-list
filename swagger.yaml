openapi: 3.0.3
info:
  title: To-do list
  version: 1.0.1
tags:
  - name: task
    description: To-do list
paths:
  /: 
    get:
      tags:
        - task
      summary: Home Page
      description: Home Page
      operationId: homePage
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
        '405':
          description: Validation exception
  /tasks:
    get:
      tags:
        - task
      summary: To-do list
      description: All tasks
      operationId: findTasks
      parameters:
        - name: findByTasks
          in: query
          description: Filter tasks by prefix
          required: false
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '400':
          description: Invalid status value
  /task:
    post:
      tags:
        - task
      summary: Add a new task
      description: Add a new task
      operationId: addTask
      requestBody:
        description: Create a new task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Task'
        '405':
          description: Invalid input
  /task/:taskId:
    get:
      tags:
        - task
      summary: Find task by id
      description: Returns a single pet
      operationId: getTaskById
      parameters:
        - name: taskId
          in: path
          description: ID of task to Returns
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
    put:
      tags:
        - task
      summary: Update an existing task
      description: Update an existing task by ID
      operationId: Update a task with form data
      parameters:
        - name: taskId
          in: path
          description: ID of task that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Create a new task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
        '405':
          description: Validation exception
    delete:
      tags:
        - task
      summary: Delete a task
      description: delete a task
      operationId: deleteTask
      parameters:
        - name: taskId
          in: path
          description: Task id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
        '405':
          description: Validation exception
  /task/:taskId/concluded:
    patch:
      tags:
        - task
      summary: Concluded an existing task
      description: Concluded an existing task by ID
      operationId: concludedTask
      parameters:
        - name: taskId
          in: path
          description: Task id to concluded
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskConcluded'          
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskConcluded'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
        '405':
          description: Validation exception
  /task/:taskId/unconcluded:
    patch:
      tags:
        - task
      summary: Unconcluded an existing task
      description: Unconcluded an existing task by ID
      operationId: unconcludedTask
      parameters:
        - name: taskId
          in: path
          description: Task id to unconcluded
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUnconcluded'          
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskUnconcluded'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
        '405':
          description: Validation exception
      
components:
  schemas:
    Task:
      required:
        - id
        - task
        - done
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        task:
          type: string
          example: feed the fish
        done:
          type: boolean
          example: false
    TaskConcluded:
      required:
        - id
        - task
        - done
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        task:
          type: string
          example: feed the fish
        done:
          type: boolean
          example: true
    TaskUnconcluded:
      required:
        - id
        - task
        - done
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        task:
          type: string
          example: feed the fish
        done:
          type: boolean
          example: false